# Техническое задание: Агентный RAG с механизмом самооценки

## Обзор
Необходимо расширить существующую RAG (Retrieval Augmented Generation) систему, добавив функциональность агентного подхода и механизма самооценки. Агентный подход позволит системе самостоятельно определять необходимые действия и планировать их выполнение, а механизм самооценки даст возможность системе критически оценивать качество своих ответов и улучшать их при необходимости.

## Цели проекта
1. Интегрировать агентную архитектуру в существующую RAG систему
2. Реализовать механизм самооценки ответов
3. Обеспечить автоматическое улучшение ответов на основе результатов самооценки
4. Сохранить совместимость с существующими интерфейсами (API, CLI)
5. Обеспечить расширяемость системы для добавления новых типов действий агента

## Основные характеристики

### Агентная система
1. Система должна анализировать запрос пользователя и определять необходимые действия
2. Система должна поддерживать следующие типы действий:
   - Поиск информации в векторной базе данных
   - Генерация ответа на основе контекста
   - Оценка качества ответа
   - Уточнение запроса у пользователя (если применимо)
   - Планирование сложных многошаговых задач
   - Исследование (поиск дополнительной информации)
3. Система должна поддерживать состояние агента между запросами для многошаговых взаимодействий
4. Система должна логировать все действия и решения агента для отладки и аудита

### Механизм самооценки
1. Система должна оценивать сгенерированные ответы по следующим критериям:
   - Релевантность запросу
   - Фактическая точность относительно контекста
   - Полнота раскрытия темы
   - Логическая последовательность
   - Соответствие этическим ограничениям
2. Система должна определять порог качества для принятия решения о необходимости улучшения ответа
3. Система должна автоматически улучшать ответы, не соответствующие порогу качества

### Механизм улучшения ответов
1. Система должна определять причины недостаточного качества ответа
2. Система должна выбирать подходящую стратегию улучшения:
   - Поиск дополнительного контекста
   - Переформулирование ответа
   - Реструктуризация ответа
   - Исправление фактических ошибок
3. Система должна поддерживать итеративное улучшение до достижения приемлемого качества

## Интеграция с существующей системой
1. Сохранить совместимость со всеми существующими API эндпоинтами
2. Расширить API новыми эндпоинтами для агентной функциональности
3. Расширить CLI интерфейс для поддержки агентного RAG
4. Обеспечить обратную совместимость с существующими коллекциями документов

## Технические требования
1. Следовать существующей архитектуре DDD+CQRS
2. Использовать существующие механизмы для работы с векторной базой данных (Qdrant)
3. Использовать LangChain для взаимодействия с языковыми моделями
4. Обеспечить конфигурируемость всех параметров агентной системы и механизма самооценки
5. Реализовать тесты для новой функциональности

## Ограничения
1. Минимизировать влияние на производительность системы
2. Обеспечить отказоустойчивость при сбоях в работе агентной системы
3. Сохранить существующие метрики безопасности и приватности данных

## Дополнительные функции (опционально)
1. Механизм обучения на основе обратной связи от пользователей
2. Панель мониторинга для анализа работы агентной системы
3. Интеграция с внешними источниками данных для расширения контекста
